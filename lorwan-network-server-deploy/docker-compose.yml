version: '3.7'
services:

  postgres:
    # In production, replace 'latest' with tag from https://hub.docker.com/_/postgres?tab=tags
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=ttn_lorawan
    volumes:
      - ${DEV_DATA_DIR:-.env/data}/postgres:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    # In production, replace 'latest' with tag from https://hub.docker.com/_/redis?tab=tags
    image: redis:latest
    command: redis-server --appendonly yes
    restart: unless-stopped
    volumes:
      - ${DEV_DATA_DIR:-.env/data}/redis:/data
    ports:
      - "127.0.0.1:6379:6379"

  stack:
    # In production, replace 'latest' with tag from https://hub.docker.com/r/thethingsnetwork/lorawan-stack/tags
    image: thethingsnetwork/lorawan-stack:latest
    entrypoint: ttn-lw-stack -c /config/ttn-lw-stack-docker.yml
    command: start
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    volumes:
      - ./blob:/srv/ttn-lorawan/public/blob
      - ./config/stack:/config:ro
      # If using Let's Encrypt:
      - ./acme:/var/lib/acme
    environment:
      TTN_LW_BLOB_LOCAL_DIRECTORY: /srv/ttn-lorawan/public/blob
      TTN_LW_REDIS_ADDRESS: redis:6379
      TTN_LW_IS_DATABASE_URI: postgres://root:root@postgres:5432/ttn_lorawan?sslmode=disable

    ports:
      # If deploying on a public server:
      - "80:1885"
      - "443:8885"
      - "1881:1881"
      - "8881:8881"
      - "1882:1882"
      - "8882:8882"
      - "1883:1883"
      - "8883:8883"
      - "1884:1884"
      - "8884:8884"
      - "1885:1885"
      - "8885:8885"
      - "1886:1886"
      - "8886:8886"
      - "1887:1887"
      - "8887:8887"
      - "1700:1700/udp"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Admin@123
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - 3000:3000

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - 4000:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ammarbanduk@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Admin@123
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  mqttexplorer:
    image: smeagolworms4/mqtt-explorer
    container_name: mqttexplorer
    restart: always
    ports: 
      - 18083:4000
    environment:
      HTTP_PORT: 4000
      CONFIG_PATH: /mqtt-explorer/config
    volumes:
      - ./mqtt-explorer:/mqtt-explorer/config

#  emqx:
#    image: emqx/emqx:5.8.0
#    container_name: emqx
#    ports:
#      - "1900:1883" # MQTT
#      - "8083:8083" # WEBSOCKETS
#      # - "8084:8084"
#      # - "8883:8883"
#      - "18083:18083" #WEBAPP
#    volumes:
#      - ./emqx_config/emqx.conf:/opt/emqx/etc/emqx.conf
#      - ./data:/opt/emqx/data
#      - ./log:/opt/emqx/log
#    environment:
#      - EMQX_LOG_LEVEL=info

volumes:
  grafana-storage:
  pgadmin-data:

    # If using custom certificates:
    # secrets:
    #   - ca.pem
    #   - cert.pem
    #   - key.pem

# If using custom certificates:
# secrets:
#   ca.pem:
#     file: ./ca.pem
#   cert.pem:
#     file: ./cert.pem
#   key.pem:
#     file: ./key.pem
